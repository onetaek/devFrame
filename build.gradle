plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // spring test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // h2 db
    implementation 'com.h2database:h2'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // RestDocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext { // 전역 변수
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

test {
    outputs.dir snippetsDir
}

asciidoctor.doFirst {
    delete file("src/main/resources/static/docs")
}

asciidoctor {
    configurations 'asciidoctorExt'
    inputs.dir snippetsDir
    dependsOn test
    baseDirFollowsSourceFile() // 다른 adoc 파일을 include 할 때 경로를 baseDir로 맞춘다.
    sources { // 특정 파일만 html로 만든다.
        include("**/index.adoc")
    }
}

bootJar {
    enabled = true

    dependsOn asciidoctor

    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

compileJava {
    options.compilerArgs.addAll(['-parameters', '-Xlint:unchecked'])
    options.debug = true
    options.encoding = 'UTF-8'
}